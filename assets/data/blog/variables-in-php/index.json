{"hash":"84c42ca58d297679ff7bcc696b9d02720d556f9b","data":{"post":{"title":"Declaring PHP Variables","image":"/images/posts/variables-in-php.png","tags":["php","variables-in-php","server-side"],"path":"/blog/variables-in-php/","date":"8. February 2021","description":"In PHP, a variable starts with the $ sign, followed by the name of the variable PHP Variables A variable can have a short name (like x and y) or a more descriptive name (age, carname, total_volume).","content":"<h2 id=\"declaring-php-variables\"><a href=\"#declaring-php-variables\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Declaring PHP Variables:</h2>\n<p>In PHP, a variable starts with the $ sign, followed by the name of the variable\nPHP Variables\nA variable can have a short name (like x and y) or a more descriptive name (age, carname, total_volume).</p>\n<h2 id=\"rules-for-php-variables\"><a href=\"#rules-for-php-variables\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Rules for PHP variables:</h2>\n<pre class=\"language-text\">A variable starts with the $ sign, followed by the name of the variable\nA variable name must start with a letter or the underscore character\nA variable name cannot start with a number\nA variable name can only contain alpha-numeric characters and underscores (A-z, 0-9, and _ )</pre>\n<p>Variable names are <code class=\"language-text\">case-sensitive</code> ($age and $AGE are two different variables)\nRemember that PHP variable names are case-sensitive!<br></p>\n<h4 id=\"in-the-example-above-notice-that-we-did-not-have-to-tell-php-which-data-type-the-variable-is\"><a href=\"#in-the-example-above-notice-that-we-did-not-have-to-tell-php-which-data-type-the-variable-is\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>In the example above, notice that we did not have to tell PHP which data type the variable is.</h4>\n<p>PHP automatically associates a data type to the variable, depending on its value. Since the data types are not set in a strict sense, you can do things like adding a string to an integer without causing an error.<br></p>\n<p>In PHP 7, type declarations were added. This gives an option to specify the data type expected when declaring a function, and by enabling the strict requirement, it will throw a \"Fatal Error\" on a type mismatch.</p>\n"}},"context":{}}